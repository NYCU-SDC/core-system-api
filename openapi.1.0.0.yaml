openapi: 3.1.0
info:
  title: Core System API
  version: 1.0.0
tags:
  - name: Healthz
  - name: Auth
  - name: User
paths:
  /api/auth/login/oauth/{provider}:
    get:
      operationId: Auth_loginGoogle
      parameters:
        - name: provider
          in: path
          required: true
          description: The OAuth2 provider to use for login.
          schema:
            $ref: '#/components/schemas/Auth.OAuthProviders'
        - name: c
          in: query
          required: true
          description: The callback URL of the OAuth2 login. [See details](https://clustron.atlassian.net/wiki/spaces/CS/pages/41320449/Authentication+Process)
          schema:
            type: string
          explode: false
        - name: r
          in: query
          required: false
          description: The redirect URL for login callback.
          schema:
            type: string
          explode: false
      responses:
        '302':
          description: Redirection
        '404':
          description: The server cannot find the requested resource.
      tags:
        - Auth
  /api/auth/refresh/{refreshToken}:
    post:
      operationId: Auth_refreshToken
      parameters:
        - name: refreshToken
          in: path
          required: true
          description: The refresh token to use for refreshing the access token.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth.RefreshToken'
        '404':
          description: The server cannot find the requested resource.
      tags:
        - Auth
  /api/healthz:
    get:
      operationId: Healthz_checkHealthz
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        '404':
          description: The server cannot find the requested resource.
      tags:
        - Healthz
  /api/users/me:
    get:
      operationId: User_getMe
      description: Get the current user's information.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User.User'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
      tags:
        - User
components:
  schemas:
    Auth.OAuthProviders:
      type: string
      enum:
        - google
    Auth.RefreshToken:
      type: object
      required:
        - accessToken
        - expirationTime
        - refreshToken
      properties:
        accessToken:
          type: string
          description: The access token and formatted as JWT
        expirationTime:
          type: integer
          description: The expiration date of the refresh token.
        refreshToken:
          type: string
          description: The new refresh token.
    NotFound:
      type: object
      required:
        - title
        - status
        - type
        - detail
      properties:
        title:
          type: string
          enum:
            - Not Found
        status:
          type: number
          enum:
            - 404
        type:
          type: string
          enum:
            - https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404
        detail:
          type: string
    ProblemDetail:
      type: object
      required:
        - title
        - status
        - type
        - detail
      properties:
        title:
          type: string
          description: The problem's title.
        status:
          type: integer
          description: The problem's status code.
        type:
          type: string
          description: Type indicates the URI that identifies the problem type, we use an MDN URI here.
        detail:
          type: string
          description: The problem's detail.
      description: Problem represents a problem detail as defined in RFC 7807
    Unauthorized:
      type: object
      required:
        - title
        - status
        - type
        - detail
      properties:
        title:
          type: string
          enum:
            - Unauthorized
        status:
          type: number
          enum:
            - 401
        type:
          type: string
          enum:
            - https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
        detail:
          type: string
    User.Role:
      type: string
      enum:
        - user
    User.User:
      type: object
      required:
        - id
        - username
        - name
        - avatarUrl
        - roles
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
          description: The user's unique identifier.
        username:
          type: string
          description: The user's username, can change, but must be unique across the system.
        name:
          type: string
          description: The user's name, usually the first and last name.
        avatarUrl:
          type: string
          description: Avatar URL of the user.
        roles:
          type: array
          items:
            $ref: '#/components/schemas/User.Role'
          description: Global role of the user.
    Versions:
      type: string
      enum:
        - 1.0.0
    uuid:
      type: string
      format: uuid
servers:
  - url: https://example.com
    description: Single server endpoint
    variables: {}
